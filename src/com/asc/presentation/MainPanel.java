package com.asc.presentation;

import asctokentool.GUI.testJFrame;
import asctokentool.GUI.TokenToolMainPanel;
import com.asc.bean.Key;
import com.asc.keyEngine.KeyConverter;
import com.asc.keyEngine.KeyPair;
import com.asc.keyEngine.TMAPI;
import com.asc.factory_singlton_pattern.TMAPISinglton;
import com.asc.factory_singlton_pattern.TokenFactory;
import com.asc.keyEngine.DataCoding;
import com.asc.transactions.Search;
import com.mysql.jdbc.CommunicationsException;
import com.qt.datapicker.DatePicker;
import h3m.H3MAPI;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.URL;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.Observable;
import java.util.Observer;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import org.bouncycastle.util.encoders.Base64;
import sun.security.pkcs11.wrapper.PKCS11Exception;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainPanel.java
 *
 * Created on Dec 12, 2009, 9:33:53 AM
 */
/**
 *
 * @author Sun
 */
public class MainPanel extends javax.swing.JPanel {

    final JFileChooser fc = new JFileChooser();

    /** Creates new form MainPanel */
    public MainPanel() throws IOException, FileNotFoundException, ClassNotFoundException, ClassNotFoundException {
        initComponents();
        this.setSize(400, 400);
    }

    public void updateFileTable(String filePath) throws FileNotFoundException, IOException, ClassNotFoundException {
        List<Key> listKeys = api.retreiveKeysFromFile(filePath);
        DefaultTableModel model = new DefaultTableModel();

        fileTable.setModel(model);

        model.addColumn("id");
        model.addColumn("Alias");
        model.addColumn("Description");
        model.addColumn("Tage");
        model.addColumn("Date");


        for (int i = 0; i < listKeys.size(); i++) {
            model.insertRow(i, new Object[]{
                        new String(listKeys.get(i).getId() + ""),
                        new String(DataCoding.decodeData(listKeys.get(i).getAlias())),
                        new String(DataCoding.decodeData(listKeys.get(i).getDescription())),
                        new String(DataCoding.decodeData(listKeys.get(i).getTag())),
                        new String(listKeys.get(i).getDate() + "")});
        }
    }

    public void updateDBTable() throws IOException, ClassNotFoundException {

        List<Key> list = api.retreiveKeysFromDB();
        DefaultTableModel model = new DefaultTableModel();

        DBTable.setModel(model);

        // Create a couple of columns
        model.addColumn("id");
        model.addColumn("Alias");
        model.addColumn("Description");
        model.addColumn("Tag");
        model.addColumn("Date");

        for (int i = 0; i < list.size(); i++) {
            // Create the first row

            model.insertRow(i, new Object[]{
                        new String(list.get(i).getId() + ""),
                        new String(DataCoding.decodeData(list.get(i).getAlias()) + ""),
                        new String(DataCoding.decodeData(list.get(i).getDescription()) + ""),
                        new String(DataCoding.decodeData(list.get(i).getTag()) + ""),
                        new String(list.get(i).getDate() + "")});
        }
    }

    public void updateTable(List<Key> keys, JTable table) {
        DefaultTableModel model = new DefaultTableModel();
        table.setModel(model);

        // Create a couple of columns
        model.addColumn("id");
        model.addColumn("Alias");
        model.addColumn("Description");
        model.addColumn("Tag");
        model.addColumn("Date");

        for (int i = 0; i < keys.size(); i++) {
            // Create the first row
            model.insertRow(i, new Object[]{keys.get(i).getId(),
                        DataCoding.decodeData(keys.get(i).getAlias()),
                        DataCoding.decodeData(keys.get(i).getDescription()),
                        DataCoding.decodeData(keys.get(i).getTag()),
                        keys.get(i).getDate()});
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        DBTable = new javax.swing.JTable();
        generateKeyPairButton = new javax.swing.JButton();
        deleteFromDBButton = new javax.swing.JButton();
        importTotokenFromDBButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        searchTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        listValuesButton = new javax.swing.JButton();
        writeToFileButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        filePathTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        fileTable = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("configuration/bundle"); // NOI18N
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("DBObjects"))); // NOI18N

        DBTable.setAutoCreateRowSorter(true);
        DBTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Alias", "Description", "Tage", "Date"
            }
        ));
        DBTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(DBTable);

        generateKeyPairButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/asc/resources/sec_key.png"))); // NOI18N
        generateKeyPairButton.setText(bundle.getString("genKeyPair")); // NOI18N
        generateKeyPairButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateKeyPairButtonActionPerformed(evt);
            }
        });

        deleteFromDBButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/asc/resources/file.png"))); // NOI18N
        deleteFromDBButton.setText(bundle.getString("delete")); // NOI18N
        deleteFromDBButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFromDBButtonActionPerformed(evt);
            }
        });

        importTotokenFromDBButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/asc/resources/private_key.png"))); // NOI18N
        importTotokenFromDBButton.setText(bundle.getString("import")); // NOI18N
        importTotokenFromDBButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importTotokenFromDBButtonActionPerformed(evt);
            }
        });

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/asc/resources/find.gif"))); // NOI18N
        searchButton.setText(bundle.getString("searchButton")); // NOI18N
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jLabel2.setText(bundle.getString("searchPanelLabel")); // NOI18N

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Any", "Description", "Alias", "Tage", "Date" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        listValuesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/asc/resources/open_1.png"))); // NOI18N
        listValuesButton.setText(bundle.getString("listValues")); // NOI18N
        listValuesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listValuesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(searchTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 677, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(listValuesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(listValuesButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton)))
        );

        writeToFileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/asc/resources/icon_key.gif"))); // NOI18N
        writeToFileButton.setText(bundle.getString("write")); // NOI18N
        writeToFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeToFileButtonActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/asc/resources/save.gif"))); // NOI18N
        jButton3.setText(bundle.getString("save")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/asc/resources/find.gif"))); // NOI18N
        jButton5.setText(bundle.getString("change_token_lib")); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/asc/resources/config.png"))); // NOI18N
        jButton7.setText(bundle.getString("tool")); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 903, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(generateKeyPairButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteFromDBButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(importTotokenFromDBButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(writeToFileButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importTotokenFromDBButton)
                    .addComponent(deleteFromDBButton)
                    .addComponent(generateKeyPairButton)
                    .addComponent(writeToFileButton)
                    .addComponent(jButton3)
                    .addComponent(jButton5)
                    .addComponent(jButton7)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("File objects"));

        jLabel1.setText(bundle.getString("filePath")); // NOI18N

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filePathTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 773, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(filePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)))
        );

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/asc/resources/file.png"))); // NOI18N
        jButton2.setText(bundle.getString("select")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/asc/resources/private_key.png"))); // NOI18N
        jButton4.setText(bundle.getString("import")); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        fileTable.setAutoCreateRowSorter(true);
        fileTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Alias", "Description", "Tage", "Date"
            }
        ));
        fileTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(fileTable);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/asc/resources/find.gif"))); // NOI18N
        jButton6.setText(bundle.getString("change_token_lib")); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/asc/resources/config.png"))); // NOI18N
        jButton8.setText(bundle.getString("tool")); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 893, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton4)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton8)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/asc/resources/logo small.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 901, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        int res = chooser.showOpenDialog(this);
        if (res == JFileChooser.APPROVE_OPTION) {
            filePathTextField.setText(chooser.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void generateKeyPairButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateKeyPairButtonActionPerformed

        InfoDialog dialog = new InfoDialog(null, true);
        InfoPanel.mp = this;
        dialog.setVisible(true);

}//GEN-LAST:event_generateKeyPairButtonActionPerformed

    private void deleteFromDBButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFromDBButtonActionPerformed
        Key key = new Key();
        int id = 0;
        int[] rows = DBTable.getSelectedRows();

        if (rows.length == 0) {
            JOptionPane.showMessageDialog(jPanel1, bundle.getString("plsSelectKey"));
        } else {
            int result = JOptionPane.showConfirmDialog(jPanel1,
                    bundle.getString("confirm"), "choose one", JOptionPane.YES_NO_OPTION);

            if (result == JOptionPane.YES_OPTION) {
                for (int i = 0; i < rows.length; i++) {
                    id = Integer.parseInt(DBTable.getValueAt(rows[i], 0) + "");
                    key = api.selectKey(id);
                    api.deleteKey(key);
                }
                // update database table.
                try {
                    updateDBTable();
                } catch (IOException ex) {
                    Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
                }

                JOptionPane.showMessageDialog(null, bundle.getString("keysDeleted"));
            }

        }
    //JOptionPane.showMessageDialog(null, rows);
}//GEN-LAST:event_deleteFromDBButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed

        String word = searchTextField.getText().trim();

        if (word.equals("")) {
            JOptionPane.showMessageDialog(null, bundle.getString("searchTxtField"));
        } else {
            String searchType = jComboBox1.getSelectedItem().toString();
            List<Key> list = new Search().searchInDB(searchType, word);
            updateTable(list, DBTable);
        }

}//GEN-LAST:event_searchButtonActionPerformed

    private void listValuesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listValuesButtonActionPerformed
        List<Key> keys = api.retreiveKeysFromDB();
        updateTable(keys, DBTable);
}//GEN-LAST:event_listValuesButtonActionPerformed

    private void importTotokenFromDBButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importTotokenFromDBButtonActionPerformed
        TMAPI myAPI = new TMAPI();
        JPasswordField pinpass = new JPasswordField();
        int res = JOptionPane.showConfirmDialog(null, pinpass, bundle.getString("PINRequest"), JOptionPane.OK_CANCEL_OPTION);
        try {
            if (res == JOptionPane.OK_OPTION) {
                if (pinpass == null) {
                    JOptionPane.showMessageDialog(null, bundle.getString("emptyPIN"));
                } else {
                    if (myAPI.logIn(pinpass.getPassword())) {
                        int[] rows = DBTable.getSelectedRows();
                        if (rows.length == 0) {
                            JOptionPane.showMessageDialog(null, bundle.getString("keyRequestFromTable"));
                        } else {
                            Key key = new Key();
                            int id = 0;
                            List<Key> keys = new ArrayList<Key>();
                            for (int i = 0; i < rows.length; i++) {
                                id = Integer.parseInt(DBTable.getValueAt(rows[i], 0) + "");
                                key = myAPI.selectKey(id);
                                keys.add(key);
                            }
                            List<KeyPair> keyPair = KeyConverter.decodeKeys(keys);
                            myAPI.importKeyPair(keyPair, keys, pinpass.toString());
                            JOptionPane.showMessageDialog(null, bundle.getString("keysImportedSeccess"));
                        }
                        myAPI.logOut();
                        myAPI.disConnect();
                    } else {
                        JOptionPane.showMessageDialog(jPanel1, bundle.getString("wrongPIN"), bundle.getString("wrongPIN"), JOptionPane.ERROR_MESSAGE);
                    }
                }

            }
        } catch (IOException ex) {
            Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (PKCS11Exception ex) {
            //JOptionPane.showMessageDialog(null, "PKCS11 exception");
            Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            ex.printStackTrace();
        }

}//GEN-LAST:event_importTotokenFromDBButtonActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        if (jComboBox1.getSelectedItem().equals("Date")) {

            final ObservingTextField textField = new ObservingTextField();
            final DatePicker dp = new DatePicker(textField, Locale.getDefault());
            textField.getDocument().addDocumentListener(new DocumentListener() {

                public void insertUpdate(DocumentEvent e) {
                    Date selectedDate = dp.parseDate(textField.getText());
                    searchTextField.setText(dp.formatDate(selectedDate, "yyyy-MM-dd"));
                }

                public void removeUpdate(DocumentEvent e) {
                    Date selectedDate = dp.parseDate(textField.getText());
                    searchTextField.setText(dp.formatDate(selectedDate, "yyyy-MM-dd"));
                }

                public void changedUpdate(DocumentEvent e) {

                    Date selectedDate = dp.parseDate(textField.getText());
                    searchTextField.setText(dp.formatDate(selectedDate, "yyyy-MM-dd"));
                }
            });


            // previously selected date
            Date selectedDate = dp.parseDate(textField.getText());
            dp.setSelectedDate(selectedDate);
            dp.start(searchTextField);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {

            String filePath = filePathTextField.getText();
            if (filePath.equals("")) {
                JOptionPane.showMessageDialog(null, bundle.getString("selFile"));
            } else {
                updateFileTable(filePath);
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void writeToFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeToFileButtonActionPerformed
        Key key = new Key();
        int id = 0;
        int[] rows = DBTable.getSelectedRows();

        if (rows.length == 0) {
            JOptionPane.showMessageDialog(jPanel1, bundle.getString("selectFromDBTable"));
        } else {
            String path = "";
            JFileChooser chooser = new JFileChooser();
//            chooser.setFileSelectionMode(JFileChooser.FILES);
            int res = chooser.showSaveDialog(this);
            if (res == JFileChooser.APPROVE_OPTION) {
                path = chooser.getSelectedFile().getPath();
                try {
                    List<Key> keys = new ArrayList<Key>();
                    for (int i = 0; i < rows.length; i++) {
                        id = Integer.parseInt(DBTable.getValueAt(rows[i], 0) + "");
                        key = api.selectKey(id);
                        keys.add(key);
                    }

                    api.writeKeysToFile(keys, path);
                    JOptionPane.showMessageDialog(null, bundle.getString("keysImportedSeccessFile"));

                } catch (FileNotFoundException ex) {
                    Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }



}//GEN-LAST:event_writeToFileButtonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        TMAPI myAPI = new TMAPI();
        JPasswordField pinpass = new JPasswordField();
        int res = JOptionPane.showConfirmDialog(null, pinpass, bundle.getString("PINRequest"), JOptionPane.OK_CANCEL_OPTION);
        try {
            if (res == JOptionPane.OK_OPTION) {
                if (myAPI.logIn(pinpass.getPassword())) {
                    int[] rows = fileTable.getSelectedRows();
                    if (rows.length == 0) {
                        JOptionPane.showMessageDialog(null, bundle.getString("keyRequestFromTable"));
                    } else {
                        KeyPair newKeyPair = new KeyPair();
                        int id = 0;
                        List<KeyPair> listKeyPair = new ArrayList<KeyPair>();
                        for (int i = 0; i < rows.length; i++) {
                            id = Integer.parseInt(fileTable.getValueAt(rows[i], 0) + "");
                            newKeyPair = myAPI.selectKeyPairFromFile(filePathTextField.getText(), id);
                            listKeyPair.add(newKeyPair);
                        }
                        List<Key> keys = myAPI.retreiveKeysFromFile(filePathTextField.getText());
                        myAPI.importKeyPair(listKeyPair, keys, pinpass.toString());
                        JOptionPane.showMessageDialog(null, bundle.getString("keysImportedSeccess"));
                    }
                    myAPI.logOut();
                    myAPI.disConnect();
                } else {
                    JOptionPane.showMessageDialog(jPanel1, bundle.getString("wrongPIN"), bundle.getString("wrongPIN"), JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (PKCS11Exception ex) {
//            JOptionPane.showMessageDialog(null, "PKCS11 exception");
            Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Key key = new Key();
        int id = 0;
        int[] rows = DBTable.getSelectedRows();

        if (rows.length == 0) {
            JOptionPane.showMessageDialog(jPanel1, bundle.getString("selectFromDBTable"));
        } else {
            try {
                List<Key> keys = new ArrayList<Key>();
                for (int i = 0; i < rows.length; i++) {
                    id = Integer.parseInt(DBTable.getValueAt(rows[i], 0) + "");
                    key = api.selectKey(id);
                    keys.add(key);
                }

                api.writeKeysToFile(keys, "keys.txt");
                JOptionPane.showMessageDialog(null, bundle.getString("keysImportedSeccessFile"));

            } catch (FileNotFoundException ex) {
                Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
            }


        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        ManufacturerLibraryFrame mfLib = new ManufacturerLibraryFrame();
        mfLib.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        mfLib.setVisible(true);

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        ManufacturerLibraryFrame mfLib = new ManufacturerLibraryFrame();
        mfLib.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        mfLib.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        String lib = TokenFactory.getLib();
        TokenToolMainPanel.setLib(lib);
        testJFrame frame = new testJFrame();
        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setVisible(true);

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        String lib = TokenFactory.getLib();
        TokenToolMainPanel.setLib(lib);
        testJFrame frame = new testJFrame();
        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed
    private ResourceBundle bundle =
            ResourceBundle.getBundle("configuration/bundle");
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DBTable;
    private javax.swing.JButton deleteFromDBButton;
    private javax.swing.JTextField filePathTextField;
    private javax.swing.JTable fileTable;
    private javax.swing.JButton generateKeyPairButton;
    private javax.swing.JButton importTotokenFromDBButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton listValuesButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JButton writeToFileButton;
    // End of variables declaration//GEN-END:variables
    private TMAPI api = new TMAPI();
}

class ObservingTextField extends JTextField implements Observer {

    public void update(Observable o, Object arg) {
        Calendar calendar = (Calendar) arg;
        DatePicker dp = (DatePicker) o;
        System.out.println("picked=" + dp.formatDate(calendar));
        setText(dp.formatDate(calendar));
    }
}
